"use strict";(self.webpackChunkneon_webdocs=self.webpackChunkneon_webdocs||[]).push([[510],{3728:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>a});var o=i(4848),t=i(8453);const r={toc_max_heading_level:2},l="Overview",s={id:"neon/configuration/overview/index",title:"Overview",description:"The configuration of Neon is done by its configuration file.",source:"@site/docs/neon/configuration/overview/index.md",sourceDirName:"neon/configuration/overview",slug:"/neon/configuration/overview/",permalink:"/neon-webdocs/neon/configuration/overview/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{toc_max_heading_level:2},sidebar:"docsSidebar",previous:{title:"Sources",permalink:"/neon-webdocs/neon/installation/sources/"},next:{title:"Overview",permalink:"/neon-webdocs/neon/configuration/store/overview/"}},c={},a=[{value:"Configuration file",id:"configuration-file",level:2},{value:"Location",id:"location",level:3},{value:"Syntax",id:"syntax",level:3},{value:"Sample configuration file",id:"sample-configuration-file",level:3},{value:"Environment variables",id:"environment-variables",level:2},{value:"<code>CONFIG_FILE</code>",id:"config_file",level:3},{value:"<code>DEBUG</code>",id:"debug",level:3},{value:"<code>CHILD_SOCKET</code>",id:"child_socket",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"The configuration of Neon is done by its configuration file."}),"\n",(0,o.jsx)(n.h2,{id:"configuration-file",children:"Configuration file"}),"\n",(0,o.jsx)(n.h3,{id:"location",children:"Location"}),"\n",(0,o.jsxs)(n.p,{children:["By default, the configuration file must be located in the current working directory and must be named ",(0,o.jsx)(n.code,{children:"neon.yaml"}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["You can specify a different configuration file by setting the environment variable ",(0,o.jsx)(n.a,{href:"#config_file",children:(0,o.jsx)(n.code,{children:"CONFIG_FILE"})}),"."]})}),"\n",(0,o.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,o.jsxs)(n.p,{children:["The syntax of the configuration is in ",(0,o.jsx)(n.a,{href:"https://yaml.org/spec/1.2.2/",children:"YAML"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"The file is composed of different sections composed of options and other sections."}),"\n",(0,o.jsx)(n.p,{children:"A section is defined by its own name."}),"\n",(0,o.jsx)(n.p,{children:"An option can have one value (single value) or multiple values (multi-value list) from these types:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"string: for textual content"}),"\n",(0,o.jsx)(n.li,{children:"number: for numeric content"}),"\n",(0,o.jsx)(n.li,{children:"boolean: for flag to enable/disable"}),"\n",(0,o.jsx)(n.li,{children:"an object: a group of options"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"sample-configuration-file",children:"Sample configuration file"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="neon.yaml" showLineNumbers',children:"app:\n  store:\n    storage:\n      memory:\n\n  server:\n    listeners:\n      default:\n        local:\n          listenAddr: 0.0.0.0\n          listenPort: 8080\n    sites:\n      main:\n        listeners:\n          - default\n        routes:\n          default:\n            middlewares:\n            handler:\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The main section of the configuration is ",(0,o.jsx)(n.code,{children:"app"})," and is mandatory. Sub-sections can be optional depending of their role and the features enabled."]}),"\n",(0,o.jsx)(n.h2,{id:"environment-variables",children:"Environment variables"}),"\n",(0,o.jsx)(n.p,{children:"You can override some configuration settings with environment variables."}),"\n",(0,o.jsx)(n.h3,{id:"config_file",children:(0,o.jsx)(n.code,{children:"CONFIG_FILE"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"    Type:           string\n    Default:        neon.yaml\n"})}),"\n",(0,o.jsx)(n.p,{children:"The path used for the configuration file."}),"\n",(0,o.jsx)(n.h3,{id:"debug",children:(0,o.jsx)(n.code,{children:"DEBUG"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"    Type:           boolean\n    Default:        0\n"})}),"\n",(0,o.jsx)(n.p,{children:"The flag to enable debug mode."}),"\n",(0,o.jsx)(n.h3,{id:"child_socket",children:(0,o.jsx)(n.code,{children:"CHILD_SOCKET"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"    Type:           string\n    Default:        neon.sock\n"})}),"\n",(0,o.jsx)(n.p,{children:"The socket file used to reload the instance."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>s});var o=i(6540);const t={},r=o.createContext(t);function l(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);